!cpu 6510
!ct scr
!to "TestForForwardReference.prg", cbm

; sys 1700
* = 1700
.length = .textEnd - .textStart
start
	ldx #.length-1
.l1
	lda .textStart,x
	sta $0400,x
	dex
	bpl .l1

; Note forward reference with a for loop
!for .t , .length {
	lda .textStart + .t - 1
	sta $0500 + .t - 1
	}
; This heavily contrived example then causes further updates in the next pass based on the changing value of length
!for .t , .length / 3 {
	lda .textStart + .t - 1
	sta $0600 + .t - 1
	}

	rts

.textStart
	!tx "This is *very* ugly code"

	; This is also heavily contrived, but pushes the convergence tests (Displays "Detected result change:" in the output) further by changing the length of the text based on previous changed length
	; See: IsLabelSameAsLastValue() and GetLabelNumberDifferences()
	!for .t , .length / 5 {
		!tx "."
		}
.textEnd
